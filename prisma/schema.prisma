// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ユーザーモデル
model User {
  id            String    @id @default(cuid())
  clerkId       String    @unique // ClerkのユーザーID
  email         String?   @unique
  name          String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // ユーザーの進捗情報
  progress      Progress?
  
  // ユーザーの単語帳
  vocabulary    VocabularyWord[]
  
  // ユーザーの会話履歴
  messages      Message[]
  
  // ユーザーの設定
  settings      Settings?
}

// ユーザーの進捗情報
model Progress {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  totalMessages     Int      @default(0)
  correctSentences  Int      @default(0)
  vocabularyLearned Int      @default(0)
  lastPracticed     DateTime @default(now())
  streak            Int      @default(0)
  level             Int      @default(1)
  experience        Int      @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

// 単語帳
model VocabularyWord {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  word        String
  translation String
  example     String?
  difficulty  String   @default("beginner") // beginner, intermediate, advanced
  isKnown     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, word])
}

// 会話メッセージ
model Message {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  content     String
  type        String   // user, assistant
  correction  String?
  createdAt   DateTime @default(now())
}

// ユーザー設定
model Settings {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  difficulty  String   @default("beginner") // beginner, intermediate, advanced
  autoSpeak   Boolean  @default(true)
  showTranslation Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
